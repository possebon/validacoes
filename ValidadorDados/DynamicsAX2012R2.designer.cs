#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ValidadorDados
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AX62_TMSA_PRD")]
	public partial class DynamicsAX2012R2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLOGISTICSADDRESSZIPCODE(LOGISTICSADDRESSZIPCODE instance);
    partial void UpdateLOGISTICSADDRESSZIPCODE(LOGISTICSADDRESSZIPCODE instance);
    partial void DeleteLOGISTICSADDRESSZIPCODE(LOGISTICSADDRESSZIPCODE instance);
    #endregion
		
		public DynamicsAX2012R2DataContext() : 
				base(global::ValidadorDados.Properties.Settings.Default.AX62_TMSA_PRDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DynamicsAX2012R2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DynamicsAX2012R2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DynamicsAX2012R2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DynamicsAX2012R2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LOGISTICSADDRESSZIPCODE> LOGISTICSADDRESSZIPCODEs
		{
			get
			{
				return this.GetTable<LOGISTICSADDRESSZIPCODE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOGISTICSADDRESSZIPCODE")]
	public partial class LOGISTICSADDRESSZIPCODE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ZIPCODE;
		
		private string _CITY;
		
		private string _STREETNAME;
		
		private int _FROMNUM;
		
		private int _TONUM;
		
		private int _EVENODD;
		
		private string _COUNTY;
		
		private string _COUNTRYREGIONID;
		
		private string _STATE;
		
		private string _CITYALIAS;
		
		private int _TIMEZONE;
		
		private long _DISTRICT;
		
		private long _CITYRECID;
		
		private string _DISTRICTNAME;
		
		private int _RECVERSION;
		
		private long _PARTITION;
		
		private long _RECID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZIPCODEChanging(string value);
    partial void OnZIPCODEChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnSTREETNAMEChanging(string value);
    partial void OnSTREETNAMEChanged();
    partial void OnFROMNUMChanging(int value);
    partial void OnFROMNUMChanged();
    partial void OnTONUMChanging(int value);
    partial void OnTONUMChanged();
    partial void OnEVENODDChanging(int value);
    partial void OnEVENODDChanged();
    partial void OnCOUNTYChanging(string value);
    partial void OnCOUNTYChanged();
    partial void OnCOUNTRYREGIONIDChanging(string value);
    partial void OnCOUNTRYREGIONIDChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnCITYALIASChanging(string value);
    partial void OnCITYALIASChanged();
    partial void OnTIMEZONEChanging(int value);
    partial void OnTIMEZONEChanged();
    partial void OnDISTRICTChanging(long value);
    partial void OnDISTRICTChanged();
    partial void OnCITYRECIDChanging(long value);
    partial void OnCITYRECIDChanged();
    partial void OnDISTRICTNAMEChanging(string value);
    partial void OnDISTRICTNAMEChanged();
    partial void OnRECVERSIONChanging(int value);
    partial void OnRECVERSIONChanged();
    partial void OnPARTITIONChanging(long value);
    partial void OnPARTITIONChanged();
    partial void OnRECIDChanging(long value);
    partial void OnRECIDChanged();
    #endregion
		
		public LOGISTICSADDRESSZIPCODE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZIPCODE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ZIPCODE
		{
			get
			{
				return this._ZIPCODE;
			}
			set
			{
				if ((this._ZIPCODE != value))
				{
					this.OnZIPCODEChanging(value);
					this.SendPropertyChanging();
					this._ZIPCODE = value;
					this.SendPropertyChanged("ZIPCODE");
					this.OnZIPCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STREETNAME", DbType="NVarChar(120) NOT NULL", CanBeNull=false)]
		public string STREETNAME
		{
			get
			{
				return this._STREETNAME;
			}
			set
			{
				if ((this._STREETNAME != value))
				{
					this.OnSTREETNAMEChanging(value);
					this.SendPropertyChanging();
					this._STREETNAME = value;
					this.SendPropertyChanged("STREETNAME");
					this.OnSTREETNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FROMNUM", DbType="Int NOT NULL")]
		public int FROMNUM
		{
			get
			{
				return this._FROMNUM;
			}
			set
			{
				if ((this._FROMNUM != value))
				{
					this.OnFROMNUMChanging(value);
					this.SendPropertyChanging();
					this._FROMNUM = value;
					this.SendPropertyChanged("FROMNUM");
					this.OnFROMNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONUM", DbType="Int NOT NULL")]
		public int TONUM
		{
			get
			{
				return this._TONUM;
			}
			set
			{
				if ((this._TONUM != value))
				{
					this.OnTONUMChanging(value);
					this.SendPropertyChanging();
					this._TONUM = value;
					this.SendPropertyChanged("TONUM");
					this.OnTONUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EVENODD", DbType="Int NOT NULL")]
		public int EVENODD
		{
			get
			{
				return this._EVENODD;
			}
			set
			{
				if ((this._EVENODD != value))
				{
					this.OnEVENODDChanging(value);
					this.SendPropertyChanging();
					this._EVENODD = value;
					this.SendPropertyChanged("EVENODD");
					this.OnEVENODDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTY", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string COUNTY
		{
			get
			{
				return this._COUNTY;
			}
			set
			{
				if ((this._COUNTY != value))
				{
					this.OnCOUNTYChanging(value);
					this.SendPropertyChanging();
					this._COUNTY = value;
					this.SendPropertyChanged("COUNTY");
					this.OnCOUNTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYREGIONID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string COUNTRYREGIONID
		{
			get
			{
				return this._COUNTRYREGIONID;
			}
			set
			{
				if ((this._COUNTRYREGIONID != value))
				{
					this.OnCOUNTRYREGIONIDChanging(value);
					this.SendPropertyChanging();
					this._COUNTRYREGIONID = value;
					this.SendPropertyChanged("COUNTRYREGIONID");
					this.OnCOUNTRYREGIONIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYALIAS", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CITYALIAS
		{
			get
			{
				return this._CITYALIAS;
			}
			set
			{
				if ((this._CITYALIAS != value))
				{
					this.OnCITYALIASChanging(value);
					this.SendPropertyChanging();
					this._CITYALIAS = value;
					this.SendPropertyChanged("CITYALIAS");
					this.OnCITYALIASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIMEZONE", DbType="Int NOT NULL")]
		public int TIMEZONE
		{
			get
			{
				return this._TIMEZONE;
			}
			set
			{
				if ((this._TIMEZONE != value))
				{
					this.OnTIMEZONEChanging(value);
					this.SendPropertyChanging();
					this._TIMEZONE = value;
					this.SendPropertyChanged("TIMEZONE");
					this.OnTIMEZONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISTRICT", DbType="BigInt NOT NULL")]
		public long DISTRICT
		{
			get
			{
				return this._DISTRICT;
			}
			set
			{
				if ((this._DISTRICT != value))
				{
					this.OnDISTRICTChanging(value);
					this.SendPropertyChanging();
					this._DISTRICT = value;
					this.SendPropertyChanged("DISTRICT");
					this.OnDISTRICTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYRECID", DbType="BigInt NOT NULL")]
		public long CITYRECID
		{
			get
			{
				return this._CITYRECID;
			}
			set
			{
				if ((this._CITYRECID != value))
				{
					this.OnCITYRECIDChanging(value);
					this.SendPropertyChanging();
					this._CITYRECID = value;
					this.SendPropertyChanged("CITYRECID");
					this.OnCITYRECIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISTRICTNAME", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string DISTRICTNAME
		{
			get
			{
				return this._DISTRICTNAME;
			}
			set
			{
				if ((this._DISTRICTNAME != value))
				{
					this.OnDISTRICTNAMEChanging(value);
					this.SendPropertyChanging();
					this._DISTRICTNAME = value;
					this.SendPropertyChanged("DISTRICTNAME");
					this.OnDISTRICTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECVERSION", DbType="Int NOT NULL")]
		public int RECVERSION
		{
			get
			{
				return this._RECVERSION;
			}
			set
			{
				if ((this._RECVERSION != value))
				{
					this.OnRECVERSIONChanging(value);
					this.SendPropertyChanging();
					this._RECVERSION = value;
					this.SendPropertyChanged("RECVERSION");
					this.OnRECVERSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARTITION", DbType="BigInt NOT NULL")]
		public long PARTITION
		{
			get
			{
				return this._PARTITION;
			}
			set
			{
				if ((this._PARTITION != value))
				{
					this.OnPARTITIONChanging(value);
					this.SendPropertyChanging();
					this._PARTITION = value;
					this.SendPropertyChanged("PARTITION");
					this.OnPARTITIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long RECID
		{
			get
			{
				return this._RECID;
			}
			set
			{
				if ((this._RECID != value))
				{
					this.OnRECIDChanging(value);
					this.SendPropertyChanging();
					this._RECID = value;
					this.SendPropertyChanged("RECID");
					this.OnRECIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
